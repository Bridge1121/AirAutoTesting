{"uid":"881157a5518a1a22","name":"创建笔记输入文本，增加代办","fullName":"aircases.test_agent.air.test_agent#test_note_add_agent","historyId":"736daae2f6b3e039894993637efd8e11","time":{"start":1750989620494,"stop":1750989723007,"duration":102513},"description":"创建笔记输入文本，增加代办","descriptionHtml":"<p>创建笔记输入文本，增加代办</p>\n","status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"@pytest.mark.testcase\n    @allure.title(\"创建笔记输入文本，增加代办\")\n    @allure.description(\"创建笔记输入文本，增加代办\")\n    def test_note_add_agent():\n        #点击笔记\n        poco(\"笔记\").click()\n        sleep(1)\n        #新建笔记\n        poco(text=\"新建笔记\").click()\n        poco(\"更多设置\").click()\n        poco(text=\"插入文字\").click()\n        sleep(2)\n        touch((581,997))\n        sleep(2)\n        note_name=\"输入文本添加代办\"\n        text(note_name, enter=False)\n        touch((581,1197))\n        sleep(1)\n        poco(\"com.aispeech.tablet:id/editTextView\").click()\n        #加入代办\n        poco(\"com.aispeech.tablet:id/tv_selection_todo\").click()\n        poco(text=\"确认\").click()\n        poco(\"返回\").click()\n        #删除新建的代办\n        poco(\"待办\").click()\n        poco(text=\"列表视图\").click()\n>       find_del_agent(note_name)\n\naircases\\test_agent.air\\test_agent.py:387: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\commen.py:133: in find_del_agent\n    if poco(\"androidx.compose.ui.platform.ComposeView\") \\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View/android.view.View[6]/\"\nitem = 18\n\n    def __getitem__(self, item):\n        \"\"\"\n        Select the specific UI element by index. If this UI proxy represents a set of UI elements, then use this method\n        to access the specific UI element. The new UI element will be wrapped by UIObjectProxy instance and therefore\n        the returned value is also the UI proxy object.\n    \n        The order of UI elements are determined by their position on the screen and not by the selection sequence. This\n        rule is called  \"L2R U2D\" (one by one from left to right, line by line from up to down), i.e. the most top left\n        UI element is always the first one. See ``IterationOverUI`` for more details.\n    \n        Warnings:\n            This method may cause some performance issues depending on implementation of PocoAgent.\n    \n        Args:\n            item (:obj:`int`): the index.\n    \n        Returns:\n            :py:class:`UIObjectProxy <poco.proxy.UIObjectProxy>`: a new UI proxy object representing the n-th of the\n            current UI elements.\n        \"\"\"\n    \n        if not self._query_multiple:\n            nodes = self._do_query(multiple=True, refresh=True)\n        else:\n            nodes = self._nodes\n        length = len(nodes)\n        if not self._sorted_children:\n            self._sorted_children = []\n            for i in range(length):\n                uiobj = UIObjectProxy(self.poco)\n                uiobj.query = ('index', (self.query, i))\n                uiobj._evaluated = True\n                uiobj._query_multiple = True\n                uiobj._nodes = nodes[i]\n                uiobj._nodes_proxy_is_list = False\n                pos = uiobj.get_position()\n                self._sorted_children.append((uiobj, pos))\n    \n        self._sorted_children.sort(key=lambda v: (v[1][1], v[1][0]))\n>       return self._sorted_children[item][0]\nE       IndexError: list index out of range\n\n.venv\\Lib\\site-packages\\poco\\proxy.py:250: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"创建笔记输入文本，增加代办","status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"@pytest.mark.testcase\n    @allure.title(\"创建笔记输入文本，增加代办\")\n    @allure.description(\"创建笔记输入文本，增加代办\")\n    def test_note_add_agent():\n        #点击笔记\n        poco(\"笔记\").click()\n        sleep(1)\n        #新建笔记\n        poco(text=\"新建笔记\").click()\n        poco(\"更多设置\").click()\n        poco(text=\"插入文字\").click()\n        sleep(2)\n        touch((581,997))\n        sleep(2)\n        note_name=\"输入文本添加代办\"\n        text(note_name, enter=False)\n        touch((581,1197))\n        sleep(1)\n        poco(\"com.aispeech.tablet:id/editTextView\").click()\n        #加入代办\n        poco(\"com.aispeech.tablet:id/tv_selection_todo\").click()\n        poco(text=\"确认\").click()\n        poco(\"返回\").click()\n        #删除新建的代办\n        poco(\"待办\").click()\n        poco(text=\"列表视图\").click()\n>       find_del_agent(note_name)\n\naircases\\test_agent.air\\test_agent.py:387: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\commen.py:133: in find_del_agent\n    if poco(\"androidx.compose.ui.platform.ComposeView\") \\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View/android.view.View[6]/\"\nitem = 18\n\n    def __getitem__(self, item):\n        \"\"\"\n        Select the specific UI element by index. If this UI proxy represents a set of UI elements, then use this method\n        to access the specific UI element. The new UI element will be wrapped by UIObjectProxy instance and therefore\n        the returned value is also the UI proxy object.\n    \n        The order of UI elements are determined by their position on the screen and not by the selection sequence. This\n        rule is called  \"L2R U2D\" (one by one from left to right, line by line from up to down), i.e. the most top left\n        UI element is always the first one. See ``IterationOverUI`` for more details.\n    \n        Warnings:\n            This method may cause some performance issues depending on implementation of PocoAgent.\n    \n        Args:\n            item (:obj:`int`): the index.\n    \n        Returns:\n            :py:class:`UIObjectProxy <poco.proxy.UIObjectProxy>`: a new UI proxy object representing the n-th of the\n            current UI elements.\n        \"\"\"\n    \n        if not self._query_multiple:\n            nodes = self._do_query(multiple=True, refresh=True)\n        else:\n            nodes = self._nodes\n        length = len(nodes)\n        if not self._sorted_children:\n            self._sorted_children = []\n            for i in range(length):\n                uiobj = UIObjectProxy(self.poco)\n                uiobj.query = ('index', (self.query, i))\n                uiobj._evaluated = True\n                uiobj._query_multiple = True\n                uiobj._nodes = nodes[i]\n                uiobj._nodes_proxy_is_list = False\n                pos = uiobj.get_position()\n                self._sorted_children.append((uiobj, pos))\n    \n        self._sorted_children.sort(key=lambda v: (v[1][1], v[1][0]))\n>       return self._sorted_children[item][0]\nE       IndexError: list index out of range\n\n.venv\\Lib\\site-packages\\poco\\proxy.py:250: IndexError","steps":[],"attachments":[{"uid":"de594b149cbb19c3","name":"log","source":"de594b149cbb19c3.txt","type":"text/plain","size":233}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0},"afterStages":[],"labels":[{"name":"epic","value":"办公本v2.4.0"},{"name":"feature","value":"代办模块用例"},{"name":"tag","value":"testcase"},{"name":"parentSuite","value":"aircases.test_agent.air"},{"name":"suite","value":"test_agent"},{"name":"host","value":"DESKTOP-P9LT7L8"},{"name":"thread","value":"8036-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"aircases.test_agent.air.test_agent"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":["testcase"]},"source":"881157a5518a1a22.json","parameterValues":[]}