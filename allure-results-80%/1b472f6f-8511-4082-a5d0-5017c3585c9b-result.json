{"name": "点击历史会话的文件在云端时下载后点击直接打开，文件上传后预览", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range", "trace": "@pytest.mark.testcase\n    @allure.description(\"点击历史会话的文件在云端时下载后点击直接打开，文件上传后预览\")\n    @allure.title(\"点击历史会话的文件在云端时下载后点击直接打开，文件上传后预览\")\n    def test_ai_history_file_open():\n        if is_login()==True:\n            login()\n        poco(\"AI助手\").click()\n        poco(\"文件输入\").click()\n        poco(text=\"文档\").click()\n        # 点击上传列表第一个文档\n        poco(\"android.widget.FrameLayout\") \\\n            .child(\"android.widget.LinearLayout\") \\\n            .offspring(\"com.android.documentsui:id/drawer_layout\") \\\n            .child(\"android.widget.ScrollView\") \\\n            .offspring(\"com.android.documentsui:id/container_directory\") \\\n            .offspring(\"com.android.documentsui:id/dir_list\") \\\n            .child(\"com.android.documentsui:id/item_root\")[0] \\\n            .child(\"android.widget.LinearLayout\") \\\n            .child(\"android.widget.LinearLayout\") \\\n            .offspring(\"android:id/title\").click()\n        # 点击预览文件\n        poco(\"androidx.compose.ui.platform.ComposeView\") \\\n            .child(\"android.view.View\") \\\n            .child(\"android.view.View\") \\\n            .child(\"android.view.View\")[2].offspring(\"文件\").click()\n        sleep(2)\n        # 关闭文件\n        if poco(\"cn.wps.moffice_eng:id/writer_maintoolbar_backBtn\").exists():\n            poco(\"cn.wps.moffice_eng:id/writer_maintoolbar_backBtn\").click()\n        else:\n            poco(\"cn.wps.moffice_eng:id/pdf_main_toolbar_backBtn\").click()\n        # 右滑返回\n        swipe((0, 778), (999, 778))\n        sleep(2)\n        # 点击键盘\n        poco(\"键盘输入\").click()\n        text(\"总结这个文档内容\", enter=False)\n        poco(\"分享\").click()\n        sleep(5)\n        # 返回\n        poco(\"返回\").click()\n        # 点击历史记录删除记录\n        poco(text=\"历史记录\").click()\n        sleep(1)\n        # 点击会话\n>       poco(\"android.widget.LinearLayout\") \\\n            .offspring(\"androidx.compose.ui.platform.ComposeView\") \\\n            .child(\"android.view.View\").child(\"android.view.View\") \\\n            .child(\"android.view.View\")[1] \\\n            .child(\"android.view.View\")[0].click()\n\naircases\\test_ai_history.air\\test_ai_history.py:162: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = UIObjectProxy of \"android.widget.LinearLayout>androidx.compose.ui.platform.ComposeView/android.view.View/android.view.View/android.view.View\"\nitem = 1\n\n    def __getitem__(self, item):\n        \"\"\"\n        Select the specific UI element by index. If this UI proxy represents a set of UI elements, then use this method\n        to access the specific UI element. The new UI element will be wrapped by UIObjectProxy instance and therefore\n        the returned value is also the UI proxy object.\n    \n        The order of UI elements are determined by their position on the screen and not by the selection sequence. This\n        rule is called  \"L2R U2D\" (one by one from left to right, line by line from up to down), i.e. the most top left\n        UI element is always the first one. See ``IterationOverUI`` for more details.\n    \n        Warnings:\n            This method may cause some performance issues depending on implementation of PocoAgent.\n    \n        Args:\n            item (:obj:`int`): the index.\n    \n        Returns:\n            :py:class:`UIObjectProxy <poco.proxy.UIObjectProxy>`: a new UI proxy object representing the n-th of the\n            current UI elements.\n        \"\"\"\n    \n        if not self._query_multiple:\n            nodes = self._do_query(multiple=True, refresh=True)\n        else:\n            nodes = self._nodes\n        length = len(nodes)\n        if not self._sorted_children:\n            self._sorted_children = []\n            for i in range(length):\n                uiobj = UIObjectProxy(self.poco)\n                uiobj.query = ('index', (self.query, i))\n                uiobj._evaluated = True\n                uiobj._query_multiple = True\n                uiobj._nodes = nodes[i]\n                uiobj._nodes_proxy_is_list = False\n                pos = uiobj.get_position()\n                self._sorted_children.append((uiobj, pos))\n    \n        self._sorted_children.sort(key=lambda v: (v[1][1], v[1][0]))\n>       return self._sorted_children[item][0]\nE       IndexError: list index out of range\n\n.venv\\Lib\\site-packages\\poco\\proxy.py:250: IndexError"}, "description": "点击历史会话的文件在云端时下载后点击直接打开，文件上传后预览", "attachments": [{"name": "log", "source": "394218f4-a459-452e-ac5b-489e99e0a014-attachment.txt", "type": "text/plain"}], "start": 1751017364305, "stop": 1751017407190, "uuid": "60ebf954-d5fd-4d35-913e-feea8c0a0ab5", "historyId": "cdc1b3b264e97dd88af65122ab03ee93", "testCaseId": "cdc1b3b264e97dd88af65122ab03ee93", "fullName": "aircases.test_ai_history.air.test_ai_history#test_ai_history_file_open", "labels": [{"name": "epic", "value": "办公本v2.4.0"}, {"name": "feature", "value": "ai历史对话模块用例"}, {"name": "tag", "value": "testcase"}, {"name": "parentSuite", "value": "aircases.test_ai_history.air"}, {"name": "suite", "value": "test_ai_history"}, {"name": "host", "value": "DESKTOP-P9LT7L8"}, {"name": "thread", "value": "30888-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "aircases.test_ai_history.air.test_ai_history"}]}