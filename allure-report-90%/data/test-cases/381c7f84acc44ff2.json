{"uid":"381c7f84acc44ff2","name":"待处理列表设置代办重点关注，会同步到重点标记列表中","fullName":"aircases.test_agent.air.test_agent#test_agent_focus_on","historyId":"726209375aee40bcf9f40c121be3061e","time":{"start":1750929598906,"stop":1750929622509,"duration":23603},"description":"在待处理列表设置代办重点关注，会同步到重点标记列表中","descriptionHtml":"<p>在待处理列表设置代办重点关注，会同步到重点标记列表中</p>\n","status":"broken","statusMessage":"hrpc.exceptions.RpcRemoteException: RemoteObjectNotFoundException: RPC object not found. uri=\"[Lcom.netease.open.libpoco.sdk.AbstractNode;@d790806(ece888f7-da04-4041-b53a-497ebb5a270d)\"\n\n|--   Remote Traceback   --|\n\n\n\n|--   Remote Traceback end   --|","statusTrace":"@pytest.mark.testcase\n    @allure.description(\"在待处理列表设置代办重点关注，会同步到重点标记列表中\")\n    @allure.title(\"待处理列表设置代办重点关注，会同步到重点标记列表中\")\n    def test_agent_focus_on():\n        poco(\"待办\").click()\n        poco(text=\"请在下方书写待办或点击此处新建待办\").click()\n        agent_name = \"这是需要重点关注的代办\"\n        text(agent_name,enter=False)\n        poco(text=\"确认\").click()\n        poco(text=\"列表视图\").click()\n        #设置重点关注\n        agents = poco(\"androidx.compose.ui.platform.ComposeView\")\\\n        .child(\"android.view.View\")\\\n        .child(\"android.view.View\")\\\n        .child(\"android.view.View\")[7]\\\n        .children()\n        for i  in range(len(agents)):\n            if agents[i].get_text() == agent_name:\n                agents[i+2].click()\n                poco(text=\"重点关注\").click()\n                break\n        #删除新增的代办\n>       find_del_agent(agent_name)\n\naircases\\test_agent.air\\test_agent.py:507: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\commen.py:133: in find_del_agent\n    if agents[i].get_text() == agent_name:\n.venv\\Lib\\site-packages\\poco\\proxy.py:236: in __getitem__\n    length = len(nodes)\n.venv\\Lib\\site-packages\\hrpc\\object_proxy.py:61: in __len__\n    length = self._client__.evaluate(RpcObjectProxy(self._uri__, self._client__, path, self))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <poco.drivers.android.uiautomation.AndroidRpcClient object at 0x0000018DC9743810>\nobj_proxy = <[RpcRemoteException('RemoteObjectNotFoundException: RPC object not found. uri=\"[Lcom.netease.open.libpoco.sdk.Abstrac...ote Traceback   --|\\n\\n\\n\\n|--   Remote Traceback end   --|') raised in repr()] RpcObjectProxy object at 0x18dcb94c4d0>\nwait_for_response = True, out_response = None, on_response = None\n\n    def evaluate(self, obj_proxy, wait_for_response=True, out_response=None, on_response=None):\n        # TODO: evaluate 的流程和response handling的流程要分离\n        if not isinstance(obj_proxy, RpcObjectProxy):\n            raise RuntimeError('Only RpcObjectProxy object can be evaluated. got {}'.format(repr(obj_proxy)))\n    \n        if not obj_proxy._evaluated__:\n            self._evaluated_count += 1\n            evt = threading.Event()\n            if wait_for_response:\n                reqid = str(uuid.uuid4())\n                with self._responses_mutex:\n                    self._resp_events[reqid] = evt\n            else:\n                reqid = ''\n    \n            # emit request\n            if on_response:\n                self.transport.add_response_callback(reqid, on_response)\n    \n            try:\n                self.transport.send({'id': reqid, 'uri': obj_proxy._uri__, 'method': obj_proxy._invocation_path__},\n                                    timeout=None if wait_for_response else 0.3)\n            except TransportDisconnected as e:\n                # 如果传输层断开了，则不需要析构该对象了\n                obj_proxy._is_intermediate_uri__ = False\n                if wait_for_response:\n                    # 如果wait_for_response为false，则不关心执行结果是否正确\n                    raise\n    \n            if wait_for_response and not on_response:\n                timedout = not evt.wait(timeout=self._timeout)\n                if timedout:\n                    raise RpcTimeoutException(self.transport.session_id, reqid, str(self.transport), obj_proxy._uri__,\n                                              obj_proxy._invocation_path__, self._timeout)\n    \n                resp = self.get_response(reqid)\n                if out_response is not None:\n                    out_response.update(resp)\n                if not resp:\n                    raise RpcException(self.transport.session_id, reqid, 'Remote responses nothing!')\n                if 'errors' in resp:\n>                   raise RpcRemoteException(resp)\nE                   hrpc.exceptions.RpcRemoteException: RemoteObjectNotFoundException: RPC object not found. uri=\"[Lcom.netease.open.libpoco.sdk.AbstractNode;@d790806(ece888f7-da04-4041-b53a-497ebb5a270d)\"\nE                   \nE                   |--   Remote Traceback   --|\nE                   \nE                   \nE                   \nE                   |--   Remote Traceback end   --|\n\n.venv\\Lib\\site-packages\\hrpc\\client.py:84: RpcRemoteException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"在待处理列表设置代办重点关注，会同步到重点标记列表中","status":"broken","statusMessage":"hrpc.exceptions.RpcRemoteException: RemoteObjectNotFoundException: RPC object not found. uri=\"[Lcom.netease.open.libpoco.sdk.AbstractNode;@d790806(ece888f7-da04-4041-b53a-497ebb5a270d)\"\n\n|--   Remote Traceback   --|\n\n\n\n|--   Remote Traceback end   --|","statusTrace":"@pytest.mark.testcase\n    @allure.description(\"在待处理列表设置代办重点关注，会同步到重点标记列表中\")\n    @allure.title(\"待处理列表设置代办重点关注，会同步到重点标记列表中\")\n    def test_agent_focus_on():\n        poco(\"待办\").click()\n        poco(text=\"请在下方书写待办或点击此处新建待办\").click()\n        agent_name = \"这是需要重点关注的代办\"\n        text(agent_name,enter=False)\n        poco(text=\"确认\").click()\n        poco(text=\"列表视图\").click()\n        #设置重点关注\n        agents = poco(\"androidx.compose.ui.platform.ComposeView\")\\\n        .child(\"android.view.View\")\\\n        .child(\"android.view.View\")\\\n        .child(\"android.view.View\")[7]\\\n        .children()\n        for i  in range(len(agents)):\n            if agents[i].get_text() == agent_name:\n                agents[i+2].click()\n                poco(text=\"重点关注\").click()\n                break\n        #删除新增的代办\n>       find_del_agent(agent_name)\n\naircases\\test_agent.air\\test_agent.py:507: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\commen.py:133: in find_del_agent\n    if agents[i].get_text() == agent_name:\n.venv\\Lib\\site-packages\\poco\\proxy.py:236: in __getitem__\n    length = len(nodes)\n.venv\\Lib\\site-packages\\hrpc\\object_proxy.py:61: in __len__\n    length = self._client__.evaluate(RpcObjectProxy(self._uri__, self._client__, path, self))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <poco.drivers.android.uiautomation.AndroidRpcClient object at 0x0000018DC9743810>\nobj_proxy = <[RpcRemoteException('RemoteObjectNotFoundException: RPC object not found. uri=\"[Lcom.netease.open.libpoco.sdk.Abstrac...ote Traceback   --|\\n\\n\\n\\n|--   Remote Traceback end   --|') raised in repr()] RpcObjectProxy object at 0x18dcb94c4d0>\nwait_for_response = True, out_response = None, on_response = None\n\n    def evaluate(self, obj_proxy, wait_for_response=True, out_response=None, on_response=None):\n        # TODO: evaluate 的流程和response handling的流程要分离\n        if not isinstance(obj_proxy, RpcObjectProxy):\n            raise RuntimeError('Only RpcObjectProxy object can be evaluated. got {}'.format(repr(obj_proxy)))\n    \n        if not obj_proxy._evaluated__:\n            self._evaluated_count += 1\n            evt = threading.Event()\n            if wait_for_response:\n                reqid = str(uuid.uuid4())\n                with self._responses_mutex:\n                    self._resp_events[reqid] = evt\n            else:\n                reqid = ''\n    \n            # emit request\n            if on_response:\n                self.transport.add_response_callback(reqid, on_response)\n    \n            try:\n                self.transport.send({'id': reqid, 'uri': obj_proxy._uri__, 'method': obj_proxy._invocation_path__},\n                                    timeout=None if wait_for_response else 0.3)\n            except TransportDisconnected as e:\n                # 如果传输层断开了，则不需要析构该对象了\n                obj_proxy._is_intermediate_uri__ = False\n                if wait_for_response:\n                    # 如果wait_for_response为false，则不关心执行结果是否正确\n                    raise\n    \n            if wait_for_response and not on_response:\n                timedout = not evt.wait(timeout=self._timeout)\n                if timedout:\n                    raise RpcTimeoutException(self.transport.session_id, reqid, str(self.transport), obj_proxy._uri__,\n                                              obj_proxy._invocation_path__, self._timeout)\n    \n                resp = self.get_response(reqid)\n                if out_response is not None:\n                    out_response.update(resp)\n                if not resp:\n                    raise RpcException(self.transport.session_id, reqid, 'Remote responses nothing!')\n                if 'errors' in resp:\n>                   raise RpcRemoteException(resp)\nE                   hrpc.exceptions.RpcRemoteException: RemoteObjectNotFoundException: RPC object not found. uri=\"[Lcom.netease.open.libpoco.sdk.AbstractNode;@d790806(ece888f7-da04-4041-b53a-497ebb5a270d)\"\nE                   \nE                   |--   Remote Traceback   --|\nE                   \nE                   \nE                   \nE                   |--   Remote Traceback end   --|\n\n.venv\\Lib\\site-packages\\hrpc\\client.py:84: RpcRemoteException","steps":[],"attachments":[{"uid":"4a79d3712d663acc","name":"log","source":"4a79d3712d663acc.txt","type":"text/plain","size":242}],"parameters":[],"attachmentStep":false,"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"epic","value":"办公本v2.4.0"},{"name":"feature","value":"代办模块用例"},{"name":"tag","value":"testcase"},{"name":"parentSuite","value":"aircases.test_agent.air"},{"name":"suite","value":"test_agent"},{"name":"host","value":"DESKTOP-P9LT7L8"},{"name":"thread","value":"29032-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"aircases.test_agent.air.test_agent"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":["testcase"]},"source":"381c7f84acc44ff2.json","parameterValues":[]}